/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/TestToken.sol/MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516121246200011a60003960008181610669015281816106a9015281816108bb015281816108fb015261098a01526121246000f3fe60806040526004361061012a5760003560e01c806352d1902d116100ab57806395d89b411161006f57806395d89b4114610329578063a22cb4651461033e578063b88d4fde1461035e578063c87b56dd1461037e578063e985e9c51461039e578063f2fde38b146103e757600080fd5b806352d1902d146102935780636352211e146102b657806370a08231146102d6578063715018a6146102f65780638da5cb5b1461030b57600080fd5b80633659cfe6116100f25780633659cfe61461020057806340d097c31461022057806342842e0e146102405780634cd88b76146102605780634f1ef2861461028057600080fd5b806301ffc9a71461012f57806306fdde0314610164578063081812fc14610186578063095ea7b3146101be57806323b872dd146101e0575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611a87565b610407565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b50610179610459565b60405161015b9190611afc565b34801561019257600080fd5b506101a66101a1366004611b0f565b6104eb565b6040516001600160a01b03909116815260200161015b565b3480156101ca57600080fd5b506101de6101d9366004611b44565b610512565b005b3480156101ec57600080fd5b506101de6101fb366004611b6e565b61062d565b34801561020c57600080fd5b506101de61021b366004611baa565b61065e565b34801561022c57600080fd5b506101de61023b366004611baa565b61073e565b34801561024c57600080fd5b506101de61025b366004611b6e565b610771565b34801561026c57600080fd5b506101de61027b366004611c68565b61078c565b6101de61028e366004611ccc565b6108b0565b34801561029f57600080fd5b506102a861097d565b60405190815260200161015b565b3480156102c257600080fd5b506101a66102d1366004611b0f565b610a30565b3480156102e257600080fd5b506102a86102f1366004611baa565b610a90565b34801561030257600080fd5b506101de610b16565b34801561031757600080fd5b506097546001600160a01b03166101a6565b34801561033557600080fd5b50610179610b2a565b34801561034a57600080fd5b506101de610359366004611d10565b610b39565b34801561036a57600080fd5b506101de610379366004611d4c565b610b44565b34801561038a57600080fd5b50610179610399366004611b0f565b610b7c565b3480156103aa57600080fd5b5061014f6103b9366004611db4565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b3480156103f357600080fd5b506101de610402366004611baa565b610bf0565b60006001600160e01b031982166380ac58cd60e01b148061043857506001600160e01b03198216635b5e139f60e01b145b8061045357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461046890611de7565b80601f016020809104026020016040519081016040528092919081815260200182805461049490611de7565b80156104e15780601f106104b6576101008083540402835291602001916104e1565b820191906000526020600020905b8154815290600101906020018083116104c457829003601f168201915b5050505050905090565b60006104f682610c66565b506000908152606960205260409020546001600160a01b031690565b600061051d82610a30565b9050806001600160a01b0316836001600160a01b031614156105905760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105ac57506105ac81336103b9565b61061e5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610587565b6106288383610cc5565b505050565b6106373382610d33565b6106535760405162461bcd60e51b815260040161058790611e22565b610628838383610db2565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106a75760405162461bcd60e51b815260040161058790611e6f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106f06000805160206120a8833981519152546001600160a01b031690565b6001600160a01b0316146107165760405162461bcd60e51b815260040161058790611ebb565b61071f81610f16565b6040805160008082526020820190925261073b91839190610f1e565b50565b610746611098565b600061075261012d5490565b905061076361012d80546001019055565b61076d82826110f2565b5050565b61062883838360405180602001604052806000815250610b44565b600054610100900460ff16158080156107ac5750600054600160ff909116105b806107c65750303b1580156107c6575060005460ff166001145b6108295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610587565b6000805460ff19166001179055801561084c576000805461ff0019166101001790555b610856838361110c565b61085e61113d565b61086661116c565b8015610628576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156108f95760405162461bcd60e51b815260040161058790611e6f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109426000805160206120a8833981519152546001600160a01b031690565b6001600160a01b0316146109685760405162461bcd60e51b815260040161058790611ebb565b61097182610f16565b61076d82826001610f1e565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a1d5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610587565b506000805160206120a883398151915290565b6000818152606760205260408120546001600160a01b0316806104535760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610587565b60006001600160a01b038216610afa5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610587565b506001600160a01b031660009081526068602052604090205490565b610b1e611098565b610b286000611193565b565b60606066805461046890611de7565b61076d3383836111e5565b610b4e3383610d33565b610b6a5760405162461bcd60e51b815260040161058790611e22565b610b76848484846112b4565b50505050565b6060610b8782610c66565b6000610b9e60408051602081019091526000815290565b90506000815111610bbe5760405180602001604052806000815250610be9565b80610bc8846112e7565b604051602001610bd9929190611f07565b6040516020818303038152906040525b9392505050565b610bf8611098565b6001600160a01b038116610c5d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610587565b61073b81611193565b6000818152606760205260409020546001600160a01b031661073b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610587565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cfa82610a30565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d3f83610a30565b9050806001600160a01b0316846001600160a01b03161480610d8657506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80610daa5750836001600160a01b0316610d9f846104eb565b6001600160a01b0316145b949350505050565b826001600160a01b0316610dc582610a30565b6001600160a01b031614610deb5760405162461bcd60e51b815260040161058790611f36565b6001600160a01b038216610e4d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610587565b826001600160a01b0316610e6082610a30565b6001600160a01b031614610e865760405162461bcd60e51b815260040161058790611f36565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61073b611098565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f515761062883611384565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8a57600080fd5b505afa925050508015610fba575060408051601f3d908101601f19168201909252610fb791810190611f7b565b60015b61101d5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610587565b6000805160206120a8833981519152811461108c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610587565b50610628838383611420565b6097546001600160a01b03163314610b285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610587565b61076d828260405180602001604052806000815250611445565b600054610100900460ff166111335760405162461bcd60e51b815260040161058790611f94565b61076d8282611478565b600054610100900460ff166111645760405162461bcd60e51b815260040161058790611f94565b610b286114c6565b600054610100900460ff16610b285760405162461bcd60e51b815260040161058790611f94565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156112475760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610587565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6112bf848484610db2565b6112cb848484846114f6565b610b765760405162461bcd60e51b815260040161058790611fdf565b606060006112f483611603565b600101905060008167ffffffffffffffff81111561131457611314611bc5565b6040519080825280601f01601f19166020018201604052801561133e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846113775761137c565b611348565b509392505050565b6001600160a01b0381163b6113f15760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610587565b6000805160206120a883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611429836116db565b6000825111806114365750805b1561062857610b76838361171b565b61144f838361180f565b61145c60008484846114f6565b6106285760405162461bcd60e51b815260040161058790611fdf565b600054610100900460ff1661149f5760405162461bcd60e51b815260040161058790611f94565b81516114b29060659060208501906119d8565b5080516106289060669060208401906119d8565b600054610100900460ff166114ed5760405162461bcd60e51b815260040161058790611f94565b610b2833611193565b60006001600160a01b0384163b156115f857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061153a903390899088908890600401612031565b602060405180830381600087803b15801561155457600080fd5b505af1925050508015611584575060408051601f3d908101601f191682019092526115819181019061206e565b60015b6115de573d8080156115b2576040519150601f19603f3d011682016040523d82523d6000602084013e6115b7565b606091505b5080516115d65760405162461bcd60e51b815260040161058790611fdf565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610daa565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106116425772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061166e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061168c57662386f26fc10000830492506010015b6305f5e10083106116a4576305f5e100830492506008015b61271083106116b857612710830492506004015b606483106116ca576064830492506002015b600a83106104535760010192915050565b6116e481611384565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6117835760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610587565b600080846001600160a01b03168460405161179e919061208b565b600060405180830381855af49150503d80600081146117d9576040519150601f19603f3d011682016040523d82523d6000602084013e6117de565b606091505b509150915061180682826040518060600160405280602781526020016120c86027913961199a565b95945050505050565b6001600160a01b0382166118655760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610587565b6000818152606760205260409020546001600160a01b0316156118ca5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610587565b6000818152606760205260409020546001600160a01b03161561192f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610587565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606083156119a9575081610be9565b610be983838151156119be5781518083602001fd5b8060405162461bcd60e51b81526004016105879190611afc565b8280546119e490611de7565b90600052602060002090601f016020900481019282611a065760008555611a4c565b82601f10611a1f57805160ff1916838001178555611a4c565b82800160010185558215611a4c579182015b82811115611a4c578251825591602001919060010190611a31565b50611a58929150611a5c565b5090565b5b80821115611a585760008155600101611a5d565b6001600160e01b03198116811461073b57600080fd5b600060208284031215611a9957600080fd5b8135610be981611a71565b60005b83811015611abf578181015183820152602001611aa7565b83811115610b765750506000910152565b60008151808452611ae8816020860160208601611aa4565b601f01601f19169290920160200192915050565b602081526000610be96020830184611ad0565b600060208284031215611b2157600080fd5b5035919050565b80356001600160a01b0381168114611b3f57600080fd5b919050565b60008060408385031215611b5757600080fd5b611b6083611b28565b946020939093013593505050565b600080600060608486031215611b8357600080fd5b611b8c84611b28565b9250611b9a60208501611b28565b9150604084013590509250925092565b600060208284031215611bbc57600080fd5b610be982611b28565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611bec57600080fd5b813567ffffffffffffffff80821115611c0757611c07611bc5565b604051601f8301601f19908116603f01168101908282118183101715611c2f57611c2f611bc5565b81604052838152866020858801011115611c4857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611c7b57600080fd5b823567ffffffffffffffff80821115611c9357600080fd5b611c9f86838701611bdb565b93506020850135915080821115611cb557600080fd5b50611cc285828601611bdb565b9150509250929050565b60008060408385031215611cdf57600080fd5b611ce883611b28565b9150602083013567ffffffffffffffff811115611d0457600080fd5b611cc285828601611bdb565b60008060408385031215611d2357600080fd5b611d2c83611b28565b915060208301358015158114611d4157600080fd5b809150509250929050565b60008060008060808587031215611d6257600080fd5b611d6b85611b28565b9350611d7960208601611b28565b925060408501359150606085013567ffffffffffffffff811115611d9c57600080fd5b611da887828801611bdb565b91505092959194509250565b60008060408385031215611dc757600080fd5b611dd083611b28565b9150611dde60208401611b28565b90509250929050565b600181811c90821680611dfb57607f821691505b60208210811415611e1c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60008351611f19818460208801611aa4565b835190830190611f2d818360208801611aa4565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b600060208284031215611f8d57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061206490830184611ad0565b9695505050505050565b60006020828403121561208057600080fd5b8151610be981611a71565b6000825161209d818460208701611aa4565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ae7cbe65f94ba52037bb3a225805470230bc3ea6a27d6f5a41d164d31037c87064736f6c63430008090033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyToken> {
    return super.deploy(overrides || {}) as Promise<MyToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  override connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
